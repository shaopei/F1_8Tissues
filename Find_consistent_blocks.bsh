ln -s /workdir/sc2457/F1_Tissues/AlleleHMM/*.bsh .     
ln -s /workdir/sc2457/F1_Tissues/AlleleHMM/*.py .      #*/

mkdir map2ref_bed
cd map2ref_bed
# ln -s ...

cd ..
mkdir HMM_bed
cd HMM_bed

T=5
for OR in BN LV SK SP
  do
for s in plus minus 
  do
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_MB6_all_R1/AlleleHMM/${OR}_MB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_MB6_HMM_${s}.bed
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_PB6_all_R1/AlleleHMM/${OR}_PB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_PB6_HMM_${s}.bed
done
done

T=4
for OR in GI ST
  do
for s in plus minus 
  do
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_MB6_all_R1/AlleleHMM/${OR}_MB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_MB6_HMM_${s}.bed
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_PB6_all_R1/AlleleHMM/${OR}_PB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_PB6_HMM_${s}.bed
done
done

OR=HT
for s in plus minus 
  do
T=4
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_MB6_all_R1/AlleleHMM/${OR}_MB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_MB6_HMM_${s}.bed
T=5
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-${OR}_PB6_all_R1/AlleleHMM/${OR}_PB6_all_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed ${OR}_PB6_HMM_${s}.bed
done


T=5
for s in plus minus 
  do
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-LG_MB6_FG_R1/AlleleHMM/LG_MB6_FG_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed LG_MB6_HMM_${s}.bed
ln -s /workdir/sc2457/F1_Tissues/allelicbias-PersonalGenome_P.CAST_M.B6-LG_PB6_CDE_R1/AlleleHMM/LG_PB6_CDE_R1_${s}_regions_t1E-0${T}.sorted_binomtest_SigBlocks.bed LG_PB6_HMM_${s}.bed
done

cd ..

wait_a_second() {
  joblist=($(jobs -p))
    while (( ${#joblist[*]} >= 10 ))
      do
      sleep 1
      joblist=($(jobs -p))
  done
}

for bed in HMM_bed/*_HMM_minus.bed  #*/
do 
Head=`echo ${bed} | cut -d / -f 2- |cut -d _ -f 1-2` #BN_MB6
echo $Head
bed_dir=map2ref_bed
for f in ${bed_dir}/${Head}_*_R1.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz
do PREFIX=`echo $f|cut -d . -f 1`
echo $PREFIX
MAT_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed
PAT_READ_BED=${PREFIX}.pat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed
IDENTICAL_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed

P=`echo $PREFIX| cut -d / -f 2`
cat HMM_bed/${Head}_HMM_plus.bed  | awk 'BEGIN {OFS="\t"; t=","} {print $1, $2, $3, $4t$6t$7,".", "+"}' > ${P}_HMM_plus.bed
cat HMM_bed/${Head}_HMM_minus.bed | awk 'BEGIN {OFS="\t"; t=","} {print $1, $2, $3, $4t$6t$7,".", "-"}' > ${P}_HMM_minus.bed
bash BinomialTest.bsh -sorted -b ${P}_HMM_plus.bed  -m <(zcat ${MAT_READ_BED}.gz) -p <(zcat ${PAT_READ_BED}.gz) -i <(zcat ${IDENTICAL_READ_BED}.gz) &  
bash BinomialTest.bsh -sorted -b ${P}_HMM_minus.bed -m <(zcat ${MAT_READ_BED}.gz) -p <(zcat ${PAT_READ_BED}.gz) -i <(zcat ${IDENTICAL_READ_BED}.gz) &
wait_a_second
done
done

#HERE


# use ${P}_HMM_plus_binomtest.bed ${P}_HMM_minus_binomtest.bed
# exmaine the direction is correct

for bed in HMM_bed/*_HMM_minus.bed  #*/
do 
Head=`echo ${bed} | cut -d / -f 2- |cut -d _ -f 1-2` #BN_MB6
echo $Head
bedtools intersect -sorted -filenames -a ${Head}_all_R1_HMM_plus_binomtest.bed -b ${Head}_*_R1_HMM_plus_binomtest.bed -c > ${Head}_all_R1_HMM_plus_agreeCount.bed
bedtools intersect -sorted -filenames -a ${Head}_all_R1_HMM_minus_binomtest.bed -b ${Head}_*_R1_HMM_minus_binomtest.bed -c > ${Head}_all_R1_HMM_minus_agreeCount.bed
done

Head=LG_PB6
bedtools intersect -sorted -filenames -a ${Head}_CDE_R1_HMM_plus_binomtest.bed -b ${Head}_*_R1_HMM_plus_binomtest.bed -c > ${Head}_all_R1_HMM_plus_agreeCount.bed
bedtools intersect -sorted -filenames -a ${Head}_CDE_R1_HMM_minus_binomtest.bed -b ${Head}_*_R1_HMM_minus_binomtest.bed -c > ${Head}_all_R1_HMM_minus_agreeCount.bed
Head=LG_MB6
bedtools intersect -sorted -filenames -a ${Head}_FG_R1_HMM_plus_binomtest.bed -b ${Head}_*_R1_HMM_plus_binomtest.bed -c > ${Head}_all_R1_HMM_plus_agreeCount.bed
bedtools intersect -sorted -filenames -a ${Head}_FG_R1_HMM_minus_binomtest.bed -b ${Head}_*_R1_HMM_minus_binomtest.bed -c > ${Head}_all_R1_HMM_minus_agreeCount.bed


for f in *_agreeCount.bed 
	do s=`cat $f| rev | cut -f 1 |sort |uniq -c |tail -n 1 |awk '{print $2}'`
echo $f
echo $s
P=`echo $f |rev | cut -d . -f 2 |rev`
# Strict: same dirrection in all samples
cat $f | awk 'BEGIN {OFS="\t"} ($10 >= '$s'){print $0}' >  ${P}_strict_agreenAmong_$((s-1))_samples.bed
# Medium: same direction in all but 1 sample
cat $f | awk 'BEGIN {OFS="\t"} ($10 >= '$s-1'){print $0}' >  ${P}_allbut1_agreenAmong_$((s-2))_samples.bed
done

