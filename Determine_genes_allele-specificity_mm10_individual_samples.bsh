cd /workdir/sc2457/F1_Tissues/GeneAlleleSpecificity_consisntency

# mouse mm10_GRCm38
# make bed from gtf from GENCODE
# gtf2bed < gencode.vM20.annotation.gtf > gencode.vM20.annotation.bed
# use transcript annotation
# cat gencode.vM20.annotation.bed | cut -f 1-8 |awk 'BEGIN {OFS="\t"} ($8=="transcript"){print $1, $2, $3, $4, $5, $6}' \
|LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V  |uniq > gencode.vM20.annotation_transcript.bed


###### indentify genes allele-specificity
### counts the maternal, paternal reads, and the reads that cannot tell where it from, in the regions the bed file
# perform BinomialTest and filter by FDR<= FDR_CUTOFF
# the allele-specificity of genes

ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/map2ref_bed/ .

wait_a_second() {
  joblist=($(jobs -p))
    while (( ${#joblist[*]} >= 10 ))
      do
      sleep 1
      joblist=($(jobs -p))
  done
}

PL=/workdir/sc2457/alleleDB/alleledb_pipeline_mouse
MAPS=/workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/%s_P.CAST.EiJ_M.C57BL.6J.map
FDR_SIMS=10
FDR_CUTOFF=0.1
bed_f=gencode.vM20.annotation_transcript.bed

mkdir toremove
for bed in map2ref_bed/*all_R1.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz  #*/
#for bed in map2ref_bed/notall/*.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz  #*/
  do Head=`echo ${bed} |rev | cut -d / -f 1|rev |cut -d _ -f 1-3` #BN_MB6_A
  echo $Head
  PREFIX=${Head}_R1
  echo $PREFIX
  MATBOWTIE=map2ref_bed/${PREFIX}.mat.bowtie.gz
  PATBOWTIE=map2ref_bed/${PREFIX}.pat.bowtie.gz
  j=${PREFIX}_gencode.vM20.annotation_transcript
  # -F  Minimum overlap required as a fraction of B. Default is 1E-9 (i.e., 1bp).
  # only count reads that 0.9 of the length is within the transcript annotation
  bedtools coverage -s -F 0.9 -sorted -a ${bed_f} -b <(zcat ${MATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed.gz) | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3t$6, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.mat_cov.bed &
  bedtools coverage -s -F 0.9 -sorted -a ${bed_f} -b <(zcat ${PATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed.gz) | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3t$6, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.pat_cov.bed &
  wait
  # keep genes with at lease 1 allele-specific read
  join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,1.8,2.8 ${j}.mat_cov.bed ${j}.pat_cov.bed | awk 'BEGIN{OFS="\t"} ($6+$7 >0) {print $0}' | \
 awk 'BEGIN{OFS="\t"; t=","} ($6>$7) {split($1,a,"_"); print $2, $3, $4, "M"t$6t$7, $6, $7, "-" ,a[4], $5, "M"}  ($6<=$7) {split($1,a,"_"); print $2, $3, $4, "P"t$6t$7, $6, $7, "-", a[4], $5, "P"}' \
  | LC_ALL=C sort -k1,1V -k2,2n --parallel=30 > ${j}.merged_cov.bed
  mv ${j}.mat_cov.bed ${j}.pat_cov.bed toremove
  # output of BinomialTestFor_merged_cov.bed.py:(hmm+BinomialTest) if p-value <= 0.05, remain what it got from hmm (can ne M,P, or S), otherwise S.
  python ${PL}/BinomialTestFor_merged_cov.bed.py ${j}.merged_cov.bed ${j}.merged_cov_binomtest.bed
  mv ${j}.merged_cov.bed toremove
  mv ${j}.merged_cov_binomtest.bed ${j}.merged_cov_binomtest.bed_temp
  cat ${j}.merged_cov_binomtest.bed_temp | awk 'BEGIN{OFS="\t"} NR==1 {print $0, "strand", "TRX_ID"}  NR>1 {print $0}' > ${j}.merged_cov_binomtest.bed
  mv ${j}.merged_cov_binomtest.bed_temp toremove
  python ${PL}/FalsePosFor_merged_cov.bed.py ${j}.merged_cov_binomtest.bed ${FDR_SIMS} ${FDR_CUTOFF} > ${j}.merged_cov_binomtest_FDR${FDR_CUTOFF}.txt &
#  awk 'NR==1 { print $0 } NR>1 && $9 <= thresh { print $0 }'  thresh=$(awk 'END {print $6}' ${j}.merged_cov_binomtest_FDR${FDR_CUTOFF}.txt) < ${j}.merged_cov_binomtest.bed  > ${j}_interestingHets.bed
done



## combine p-value in one file
for t in `ls *all_R1_gencode.vM20.annotation_transcript_interestingHets.bed |cut -d _ -f 1 |uniq`
  do 
echo $t
R --vanilla --slave --args $(pwd) $t < Find_consistent-allelicbiased_gene.R
done

# use bigbed
cd /local/ftp/pub/hub/F1_Tissues/mm10
ln -s /workdir/sc2457/F1_Tissues/GeneAlleleSpecificity_consisntency/*gencode.vM20.transcript_ABconsistent_FisherMethodP0.05.bed . #*/

export mouse_chinfo=/local/storage/data/mm10/mm10.chromInfo

for f in *MB6_R1_gencode.vM20.transcript_ABconsistent_FisherMethodP0.05.bed
  do 
PREFIX=`echo $f|cut -d _ -f 1-2`
sort-bed $f | awk 'BEGIN {OFS="\t"} {print $1,$2,$3,$7,111,$4}' > ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bed
bedToBigBed  ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bed ${mouse_chinfo}  ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bb
done

# switch Pat,Mat for PB6
for f in *PB6_R1_gencode.vM20.transcript_ABconsistent_FisherMethodP0.05.bed
  do 
PREFIX=`echo $f|cut -d _ -f 1-2`
sort-bed $f | awk  'BEGIN {OFS="\t"; t=","; M="P"; P="M"} (substr($7, 1, 1)=="M") {split($7,a,","); print $1, $2, $3, M,a[3], a[2], 111 ,$4} (substr($7, 1, 1)=="P") {split($7,a,","); print $1, $2, $3, P,a[3], a[2], 111 ,$4}'  \
|  awk  'BEGIN {OFS="\t"; t=","} {print $1,$2,$3, $4t$5t$6, $7, $8}' > ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bed
bedToBigBed  ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bed ${mouse_chinfo}  ${PREFIX}_transcript_ABconsistent_FisherMethodP0.05.bb
done

# fraction of gene allelic biased 
rm tmp.txt
for f in *all_R1_gencode.vM20.annotation_transcript.merged_cov_binomtest.bed
  do wc -l $f >> tmp.txt
  p=`echo $f|cut -d _ -f 1-2`
  wc -l ${p}_R1_gencode.vM20.transcript_ABconsistent_FisherMethodP0.05.bed >> tmp.txt
done
cat tmp.txt |paste - -


-rw-rw-r-- 1 sc2457 sc2457 1126994 Apr 18 13:09 LG_MB6_R1_gencode.vM20.transcript_ABconsistent_FisherMethodP0.05.bed
-rw-rw-r-- 1 sc2457 sc2457 7159130 Apr 17 19:01 LG_MB6_all_R1_gencode.vM20.annotation_transcript.merged_cov_binomtest.bed


