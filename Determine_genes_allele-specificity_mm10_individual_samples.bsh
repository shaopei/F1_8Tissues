cd /workdir/sc2457/F1_Tissues/GeneAlleleSpecificity_consisntency

# mouse mm10_GRCm38
# make bed from gtf from GENCODE
# gtf2bed < gencode.vM20.annotation.gtf > gencode.vM20.annotation.bed
# use transcript annotation
# cat gencode.vM20.annotation.bed | cut -f 1-8 |awk 'BEGIN {OFS="\t"} ($8=="transcript"){print $1, $2, $3, $4, $5, $6}' \
|LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V  > gencode.vM20.annotation_transcript.bed


###### indentify genes allele-specificity
### counts the maternal, paternal reads, and the reads that cannot tell where it from, in the regions the bed file
# perform BinomialTest and filter by FDR<= FDR_CUTOFF
# the allele-specificity of genes

ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/map2ref_bed/ .
ln -s ../AlleleHMM/*.py
ln -s ../AlleleHMM/*.bsh #*/

wait_a_second() {
  joblist=($(jobs -p))
    while (( ${#joblist[*]} >= 10 ))
      do
      sleep 1
      joblist=($(jobs -p))
  done
}

PL=/workdir/sc2457/alleleDB/alleledb_pipeline_mouse
MAPS=/workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/%s_P.CAST.EiJ_M.C57BL.6J.map
FDR_SIMS=10
FDR_CUTOFF=0.1
bed_f=gencode.vM20.annotation_transcript.bed

for bed in map2ref_bed/*.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz  #*/
  do 
  Head=`echo ${bed} | cut -d / -f 2- |cut -d _ -f 1-3` #BN_MB6_A
  echo $Head
  PREFIX=${Head}_R1
  echo $PREFIX
  MATBOWTIE=map2ref_bed/${PREFIX}.mat.bowtie.gz
  PATBOWTIE=map2ref_bed/${PREFIX}.pat.bowtie.gz
  j=${PREFIX}_gencode.vM20.annotation_transcript

  bedtools coverage -sorted -a ${bed_f} -b <(zcat ${MATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed.gz) -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3t$6, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.mat_cov.bed &
  bedtools coverage -sorted -a ${bed_f} -b <(zcat ${PATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed.gz) -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3t$6, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.pat_cov.bed &
  wait
  join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,1.8,2.8 ${j}.mat_cov.bed ${j}.pat_cov.bed > ${j}.merged_cov.bed_temp &
  #bedtools coverage -sorted -a ${bed_f} -b <(zcat ${MATBOWTIE}_AMBremoved_sorted_identical.map2ref.sorted.bed.gz) -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3t$6, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.iden_cov.bed &
  #wait
  #join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,1.6,1.7,2.8 ${j}.temp_cov.bed ${j}.iden_cov.bed | LC_ALL=C sort -k1,2V -k2,3n --parallel=30 > ${j}.merged_cov.bed
  mkdir toremove
  mv ${j}.mat_cov.bed ${j}.pat_cov.bed toremove
  # keep genes with at lease 1 allele-specific read
  cat ${j}.merged_cov.bed_temp | awk 'BEGIN{OFS="\t"} ($6+$7 >0) {print $0}' \
  | awk 'BEGIN{OFS="\t"} ($6>$7) {split($1,a,"_"); print $2, $3, $4, "M", $6, $7, a[4], $5}  ($6<=$7) {split($1,a,"_"); print $2, $3, $4, "P", $6, $7, a[4], $5}' \
  | LC_ALL=C sort -k1,1V -k2,2n --parallel=30 > ${j}.merged_cov.bed
  python ${PL}/BinomialTestFor_merged_cov.bed.py ${j}.merged_cov.bed ${j}.merged_cov_binomtest.bed
  mv ${j}.merged_cov.bed ${j}.merged_cov.bed_temp toremove
  # output of BinomialTestFor_merged_cov.bed.py:(hmm+BinomialTest) if p-value <= 0.05, remain what it got from hmm (can ne M,P, or S), otherwise S.
  #python ${PL}/FalsePosFor_merged_cov.bed.py ${j}.merged_cov_binomtest.bed ${FDR_SIMS} ${FDR_CUTOFF} > ${j}.merged_cov_binomtest_FDR${FDR_CUTOFF}.txt &
  #wait
done
