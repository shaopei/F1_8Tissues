### calculate the numbe of genes in imprinting
# 1. use transcript from GENCODE protein coing genes
# 2. keep thetranscripts that overlap w/ dREG sites
# 3. merge the transcripts that overlaps

# mouse mm10_GRCm38
# make bed from gtf from GENCODE
# gtf2bed < gencode.vM20.annotation.gtf > gencode.vM20.annotation.bed
cat gencode.vM20.annotation.bed |awk 'BEGIN {OFS="\t"} ($8=="transcript"){print $0}' | grep protein_coding |gzip > gencode.vM20.annotation_transcript_protein_coding.bed.gz


for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
# keep transcript annotations that are overlap with dREG sites
intersectBed -u -a <(zcat gencode.vM20.annotation_transcript_protein_coding.bed.gz | cut -f 1-6) -b <(zcat /workdir/sc2457/F1_Tissues/dREG/Browser/${Head}_all.dREG.peak.score.bed.gz) | gzip > ${Head}_gencode.vM20.annotation_transcript_protein_coding.bed.gz
# avoid multiple count of transcript share similarl location, need to merge bed of overlaping transcript as follows:
# -s	Force strandedness
bedtools merge -i <(zcat ${Head}_gencode.vM20.annotation_transcript_protein_coding.bed.gz) -s -o distinct  -c 4,5,6 |awk 'BEGIN {OFS="\t"; a="111"} {print $1,$2,$3,$4,a,$6}'|LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V |gzip > ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed.gz
done


### calculate the numbe of ncRNA in imprinting
# use tunits that does not overlap with the gene transcript from above
for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
#ln -s /workdir/sc2457/F1_Tissues/bigWig/${Head}_all_h5.preds.full.bed .
# -v	Only report those entries in A that have no overlap in B. Restricted by -f and -r.
intersectBed -s -v -a ${Head}_all_h5.preds.full.bed -b <(zcat ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed.gz) |cut -f 1-6 | gzip > ${Head}_all_h5.preds.full_outProtein_coding.bed.gz
done

#HERE
### Do the calculation here

PL=/workdir/sc2457/alleleDB/alleledb_pipeline_mouse
MAPS=/workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/%s_P.CAST.EiJ_M.C57BL.6J.map
FDR_SIMS=10
FDR_CUTOFF=0.1

BinomialTest(){
  # BinomialTest $f $j $MAT_READ_BED $PAT_READ_BED
  f=$1
  j=$2
  MAT_READ_BED=$3
  PAT_READ_BED=$4
  
  bedtools coverage -s -a $f -b ${MAT_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.mat_cov.bed &
  bedtools coverage -s -a $f -b ${PAT_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.pat_cov.bed &
  #bedtools coverage -s -a $f -b ${IDENTICAL_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.iden_cov.bed &
  wait

  # filter the block and only keep block with at lease 1 allele-specific read
  join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,2.5 ${j}.mat_cov.bed ${j}.pat_cov.bed | awk 'BEGIN{OFS="\t"} ($5+$6 >0) {print $0}' | \
  awk 'BEGIN{OFS="\t"; t=","} ($5>$6) {print $2, $3, $4, "M"t$5t$6, $5, $6, "-" }  ($5<$6) {print $2, $3, $4, "P"t$5t$6, $5, $6, "-"}  ($5==$6) {print $2, $3, $4, "S"t$5t$6, $5, $6, "-"} '  \
  | LC_ALL=C sort -k1,1V -k2,2n --parallel=30 > ${j}.merged_cov.bed

  mv ${j}.mat_cov.bed ${j}.pat_cov.bed toremove
  # output of BinomialTestFor_merged_cov.bed.py:(hmm+BinomialTest) if p-value <= 0.05, remain what it got from hmm (can ne M,P, or S), otherwise S.
  python ${PL}/BinomialTestFor_merged_cov.bed.py ${j}.merged_cov.bed ${j}_binomtest.bed
  mv ${j}.merged_cov.bed toremove

  python ${PL}/FalsePosFor_merged_cov.bed.py ${j}_binomtest.bed ${FDR_SIMS} ${FDR_CUTOFF} > ${j}_binomtest_FDR${FDR_CUTOFF}.txt &
  #  awk 'NR==1 { print $0 } NR>1 && $9 <= thresh { print $0 }'  thresh=$(awk 'END {print $6}' ${j}_binomtest_FDR${FDR_CUTOFF}.txt) < ${j}_binomtest.bed  > ${j}_interestingHets.bed
}




#
ln -s ../3rd_batch/map2ref/HMM_bed





##### NOT used below #####
# genetics, both B6 or both Cast
# imprinting, both M or both P


cd /workdir/sc2457/F1_Tissues/ImprintingOrGenetics/strict
ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/*strict* .



for f in *_agreeCount_strict_agreenAmong_*_samples.bed
do echo $f #BN_MB6_all_R1_HMM_minus_agreeCount_strict_agreenAmong_3_samples.bed
head=`echo $f |cut -d _ -f 1-8`
mv $f ${head}.bed
done

# intersect the blocks from two cross MB6 and PB6
for f in *MB6_all_R1_HMM_*_agreeCount_strict.bed
do head=`echo $f |cut -d _ -f 1`
tail=`echo $f |cut -d _ -f 3-`
s=`echo $f |cut -d _ -f 6`

bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_0.1.bed
bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_1bp.bed

# bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
# |awk 'BEGIN{OFS="\t"} ($NF >10 ){print $0}' > ${head}_MB6_PB6_${s}_intersect_10.bed
done


for f in *_intersect_*.bed
do 
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)==substr($8,1,1) {print $0}' > ${f}_strain.bed # M.P in PB6 is reversed
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)!=substr($8,1,1) {print $0}' > ${f}_imprint.bed
done


diff LV_MB6_PB6_minus_intersect_0.1.bed_imprint.bed LV_MB6_PB6_minus_intersect_1bp.bed_imprint.bed | awk '{print $2":"$3"-"$4,$6":"$7"-"$8, $0}'^C
[sc2457@cbsudanko ImprintingOrGenetics]$ head LV_MB6_PB6_minus_intersect_0.1.bed_imprint.bed | awk '{print $1":"$2"-"$3,$5":"$6"-"$7, $0}'


ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/*allbut1* .
for f in *_agreeCount_allbut1_agreenAmong_*_samples.bed
do echo $f #BN_MB6_all_R1_HMM_minus_agreeCount_strict_agreenAmong_3_samples.bed
head=`echo $f |cut -d _ -f 1-8`
mv $f ${head}.bed
done

# intersect the blocks from two cross MB6 and PB6
for f in *MB6_all_R1_HMM_*_agreeCount_allbut1.bed
do head=`echo $f |cut -d _ -f 1`
tail=`echo $f |cut -d _ -f 3-`
s=`echo $f |cut -d _ -f 6`

bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_0.1.bed
bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_1bp.bed


##### redo with stric blocks with p value <=0.05
cd /workdir/sc2457/F1_Tissues/ImprintingOrGenetics/strict_p0.05
cp /local/ftp/pub/hub/F1_Tissues/mm10/IGV/* .


for f in *_MB6_HMM_sorted_*.bed
	do head=`echo $f |cut -d _ -f 1`
	s=`echo $f |rev|cut -d _ -f 1| rev |cut -d . -f 1 `
	bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a $f -b ${head}_PB6_HMM_sorted_${s}.bed \
	> ${head}_MB6_PB6_${s}_intersect_0.1.bed
	bedtools intersect -wo -sorted -a $f -b ${head}_PB6_HMM_sorted_${s}.bed \
	> ${head}_MB6_PB6_${s}_intersect_1bp.bed
done

for f in *_intersect_*.bed
do 
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)!=substr($10,1,1) {print $0}' > ${f}_strain.bed # M.P in PB6 is correct
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)==substr($10,1,1) {print $0}' > ${f}_imprint.bed
done

wc -l *0.1* | paste - - -  


rm imprint.txt
for f in *_intersect_0.1.bed_imprint.bed
do echo $f >> imprint.txt
cat $f | awk 'BEGIN {OFS="\t"; l1=":"; l2="-"} {print $1l1$2l2$3, $0}'  >> imprint.txt
done




