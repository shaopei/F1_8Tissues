### calculate the numbe of genes in imprinting
# 1. use transcript from GENCODE protein coing genes
# 2. keep thetranscripts that overlap w/ dREG sites
# 3. merge the transcripts that overlaps

# mouse mm10_GRCm38
# make bed from gtf from GENCODE
# gtf2bed < gencode.vM20.annotation.gtf > gencode.vM20.annotation.bed
cat gencode.vM20.annotation.bed |awk 'BEGIN {OFS="\t"} ($8=="transcript"){print $0}' | grep protein_coding |gzip > gencode.vM20.annotation_transcript_protein_coding.bed.gz


for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
# keep transcript annotations that are overlap with dREG sites
intersectBed -u -a <(zcat gencode.vM20.annotation_transcript_protein_coding.bed.gz | cut -f 1-6) -b <(zcat /workdir/sc2457/F1_Tissues/dREG/Browser/${Head}_all.dREG.peak.score.bed.gz) | gzip > ${Head}_gencode.vM20.annotation_transcript_protein_coding.bed.gz
# avoid multiple count of transcript share similarl location, need to merge bed of overlaping transcript as follows:
# -s	Force strandedness
bedtools merge -i <(zcat ${Head}_gencode.vM20.annotation_transcript_protein_coding.bed.gz) -s -o distinct  -c 4,5,6 |awk 'BEGIN {OFS="\t"; a="111"} {print $1,$2,$3,$4,a,$6}'|LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V | grep -v chrX | grep -v chrY > ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed
cat ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed | awk 'BEGIN {OFS="\t"} ($6=="+"){print $0}'> ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_plus.bed
cat ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed | awk 'BEGIN {OFS="\t"} ($6=="-"){print $0}'> ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_minus.bed
done






### calculate the numbe of ncRNA in imprinting
# use tunits that does not overlap with the gene transcript from above
for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
#ln -s /workdir/sc2457/F1_Tissues/bigWig/${Head}_all_h5.preds.full.bed .
# -v	Only report those entries in A that have no overlap in B. Restricted by -f and -r.
intersectBed -s -v -a ${Head}_all_h5.preds.full.bed -b ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed |cut -f 1-6| LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V  |grep -v chrX |grep -v chrY  > ${Head}_all_h5.preds.full_outProtein_coding.bed
cat ${Head}_all_h5.preds.full_outProtein_coding.bed | awk 'BEGIN {OFS="\t"} ($6=="+"){print $0}' > ${Head}_all_h5.preds.full_outProtein_coding_plus.bed 
cat ${Head}_all_h5.preds.full_outProtein_coding.bed | awk 'BEGIN {OFS="\t"} ($6=="-"){print $0}' > ${Head}_all_h5.preds.full_outProtein_coding_minus.bed 

done


# use dREG sites to represent ncRNA not in tunits? (did not work. very few allelic biase)
for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
# keep dREG sites that are NOT overlap with tanscript and tunits above
intersectBed -v -a <(zcat /workdir/sc2457/F1_Tissues/dREG/Browser/${Head}_all.dREG.peak.score.bed.gz)  -b <(cat ${Head}_all_h5.preds.full.bed ${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged.bed |cut -f 1-6) | LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V  > ${Head}_dREG_outProtein_outTunit.bed

cat ${Head}_dREG_outProtein_outTunit.bed | awk 'BEGIN {OFS="\t"} {print $0, "111", "+"}'> ${Head}_dREG_outProtein_outTunit_plus.bed
cat ${Head}_dREG_outProtein_outTunit.bed | awk 'BEGIN {OFS="\t"} {print $0, "111", "-"}'> ${Head}_dREG_outProtein_outTunit_minus.bed
done




### Do the calculation here

PL=/workdir/sc2457/alleleDB/alleledb_pipeline_mouse
MAPS=/workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/%s_P.CAST.EiJ_M.C57BL.6J.map
FDR_SIMS=10
FDR_CUTOFF=0.1

BinomialTest(){
  # BinomialTest $f $j $MAT_READ_BED $PAT_READ_BED
  f=$1
  j=$2
  MAT_READ_BED=$3
  PAT_READ_BED=$4
  
  bedtools coverage -s -a $f -b ${MAT_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.mat_cov.bed &
  bedtools coverage -s -a $f -b ${PAT_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.pat_cov.bed &
  #bedtools coverage -s -a $f -b ${IDENTICAL_READ_BED} -sorted| awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $1,$2,$3,$7,$8,$9,$10}' |LC_ALL=C sort -k1,1V -k2,2n > ${j}.iden_cov.bed &
  wait

  # filter the block and only keep block with at lease 1 allele-specific read
  join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,2.5 ${j}.mat_cov.bed ${j}.pat_cov.bed | awk 'BEGIN{OFS="\t"} ($5+$6 >0) {print $0}' | \
  awk 'BEGIN{OFS="\t"; t=","} ($5>$6) {print $2, $3, $4, "M"t$5t$6, $5, $6, "-" }  ($5<$6) {print $2, $3, $4, "P"t$5t$6, $5, $6, "-"}  ($5==$6) {print $2, $3, $4, "S"t$5t$6, $5, $6, "-"} '  \
  | LC_ALL=C sort -k1,1V -k2,2n --parallel=30 > ${j}.merged_cov.bed

  mv ${j}.mat_cov.bed ${j}.pat_cov.bed toremove
  # output of BinomialTestFor_merged_cov.bed.py:(hmm+BinomialTest) if p-value <= 0.05, remain what it got from hmm (can ne M,P, or S), otherwise S.
  python ${PL}/BinomialTestFor_merged_cov.bed.py ${j}.merged_cov.bed ${j}_binomtest.bed
  mv ${j}.merged_cov.bed toremove

  python ${PL}/FalsePosFor_merged_cov.bed.py ${j}_binomtest.bed ${FDR_SIMS} ${FDR_CUTOFF} > ${j}_binomtest_FDR${FDR_CUTOFF}.txt &
  #  awk 'NR==1 { print $0 } NR>1 && $9 <= thresh { print $0 }'  thresh=$(awk 'END {print $6}' ${j}_binomtest_FDR${FDR_CUTOFF}.txt) < ${j}_binomtest.bed  > ${j}_interestingHets.bed
}


## map reads from each individual sample from the same tissue and cross to the combined region of interest (protein-coding or ncRNA)
#
mkdir BinomialTest
cd BinomialTest
ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/map2ref_bed/ .
mkdir toremove
for Head in BN HT  SK  SP  KD  LV  GI  ST
do 
echo $Head
bed_dir=map2ref_bed
  for f in ${bed_dir}/${Head}_MB6_*_R1.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz  #each samples from MB6 of the same tissue
    do PREFIX=`echo $f|cut -d . -f 1`
    echo $PREFIX
    MAT_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed.gz
    PAT_READ_BED=${PREFIX}.pat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed.gz
    #IDENTICAL_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz

    P=`echo $PREFIX| cut -d / -f 2`
    ln -s ../${Head}_all_h5.preds.full_outProtein_coding_plus.bed ${P}_ncRNA_plus.bed
    ln -s ../${Head}_all_h5.preds.full_outProtein_coding_minus.bed ${P}_ncRNA_minus.bed
    ln -s ../${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_plus.bed ${P}_ProteinCodingGene_plus.bed
    ln -s ../${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_minus.bed ${P}_ProteinCodingGene_minus.bed
    #ln -s ../${Head}_dREG_outProtein_outTunit_plus.bed ${P}_dREG_outProtein_outTunit_plus.bed
    #ln -s ../${Head}_dREG_outProtein_outTunit_minus.bed ${P}_dREG_outProtein_outTunit_minus.bed

    BinomialTest ${P}_ncRNA_plus.bed ${P}_ncRNA_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ncRNA_minus.bed ${P}_ncRNA_minus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ProteinCodingGene_plus.bed ${P}_ProteinCodingGene_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ProteinCodingGene_minus.bed ${P}_ProteinCodingGene_minus ${MAT_READ_BED} ${PAT_READ_BED} &
    #BinomialTest ${P}_dREG_outProtein_outTunit_plus.bed ${P}_dREG_outProtein_outTunit_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    #BinomialTest ${P}_dREG_outProtein_outTunit_minus.bed ${P}_dREG_outProtein_outTunit_minus ${MAT_READ_BED} ${PAT_READ_BED} &
  done
  wait
  for f in ${bed_dir}/${Head}_PB6_*_R1.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz  #each samples from PB6 of the same tissue
    do PREFIX=`echo $f|cut -d . -f 1`
    echo $PREFIX
    # switch -m and -p for PB6
    PAT_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed.gz
    MAT_READ_BED=${PREFIX}.pat.bowtie.gz_AMBremoved_sorted_specific.map2ref.sorted.bed.gz
    #IDENTICAL_READ_BED=${PREFIX}.mat.bowtie.gz_AMBremoved_sorted_identical.map2ref.sorted.bed.gz

    P=`echo $PREFIX| cut -d / -f 2`
    ln -s ../${Head}_all_h5.preds.full_outProtein_coding_plus.bed ${P}_ncRNA_plus.bed
    ln -s ../${Head}_all_h5.preds.full_outProtein_coding_minus.bed ${P}_ncRNA_minus.bed
    ln -s ../${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_plus.bed ${P}_ProteinCodingGene_plus.bed
    ln -s ../${Head}_gencode.vM20.annotation_transcript_protein_coding_Merged_minus.bed ${P}_ProteinCodingGene_minus.bed
    #ln -s ../${Head}_dREG_outProtein_outTunit_plus.bed ${P}_dREG_outProtein_outTunit_plus.bed
    #ln -s ../${Head}_dREG_outProtein_outTunit_minus.bed ${P}_dREG_outProtein_outTunit_minus.bed

    BinomialTest ${P}_ncRNA_plus.bed ${P}_ncRNA_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ncRNA_minus.bed ${P}_ncRNA_minus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ProteinCodingGene_plus.bed ${P}_ProteinCodingGene_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    BinomialTest ${P}_ProteinCodingGene_minus.bed ${P}_ProteinCodingGene_minus ${MAT_READ_BED} ${PAT_READ_BED} &
    #BinomialTest ${P}_dREG_outProtein_outTunit_plus.bed ${P}_dREG_outProtein_outTunit_plus ${MAT_READ_BED} ${PAT_READ_BED} &
    #BinomialTest ${P}_dREG_outProtein_outTunit_minus.bed ${P}_dREG_outProtein_outTunit_minus ${MAT_READ_BED} ${PAT_READ_BED} &
  done
  wait
done


### work on consistency
# identify genes or ncRNA share the same allele-bias in MB6 group (A,F,G) or PB6 group (B,C,D,E)
## use fishers method to combine p-value from multiple samples  
## combine p-value in one file
for t in BN HT SK SP KD LV GI ST
  do 
R --vanilla --slave --args $(pwd) $t 0.05 R1_ncRNA < Find_consistent_blocks_v2_body.R &
R --vanilla --slave --args $(pwd) $t 0.05 R1_ProteinCodingGene < Find_consistent_blocks_v2_body.R &
#R --vanilla --slave --args $(pwd) $t 0.05 R1_dREG_outProtein_outTunit < Find_consistent_blocks_v2_body.R 
done

wc -l *_ABconsistent* |paste - - > ABconsistent_line_counts.txt 
sed  -i '1i #chrm\tchrmStart\tchrmEnd\twinP_count_all_samples\tp_value_all_samples\twinP\tp_value_Fisher\tp_value_individual_samples' *_ABconsistent*

mkdir AllelicBiaseConsistent
cd AllelicBiaseConsistent
ln -s ../*_ABconsistent_FisherMethodP0.05.bed .   #*/


join_AB(){
  file1=$1
  file2=$2
  file3=$3
  cat ${file1} ${file2} |grep -v "#" | awk 'BEGIN{t="_"} {print $1t$2t$3}' |sort -k1,1|uniq > ${file1}.tmp1
  join -a 1 -t $'\t' -e S -j 1 -o 1.1,2.5 ${file1}.tmp1  <(<${file1} awk 'BEGIN{OFS="\t"; t="_"}  {print $1t$2t$3,$0}' | sort -k1,1) > ${file1}.tmp2
  join -a 1 -t $'\t' -e S -j 1 -o 1.1,1.2,2.5 ${file1}.tmp2 <(<${file2} awk 'BEGIN{OFS="\t"; t="_"} {print $1t$2t$3,$0}' | sort -k1,1) | awk 'BEGIN{OFS="\t"} {split($1,a,"_"); print a[1],a[2],a[3], $2, $3}' > ${file3}
  rm ${file1}.tmp*
}


# make a table with Allelic Bias (AB) at MB6 and PB6 and use that to identify strain-effect, imprting, and others (one S, one M|P)

p=0.05
body=R1_ncRNA
for body in R1_ncRNA R1_ProteinCodingGene
	do
#KD_PB6_R1_ncRNA_minus_ABconsistent_FisherMethodP0.05.bed
for f in *_${body}_plus_ABconsistent_FisherMethodP${p}.bed
  do t=`echo $f|cut -d _ -f 1`
  for s in plus minus
    do 
    join_in1=${t}_MB6_${body}_${s}_ABconsistent_FisherMethodP${p}.bed 
    join_in2=${t}_PB6_${body}_${s}_ABconsistent_FisherMethodP${p}.bed 
    join_out=${t}_${body}_${s}_ABconsistent_FMp${p}.bed
    h=${t}_${body}_${s}_p${p}_effect

    join_AB ${join_in1} ${join_in2} ${join_out}
    grep S ${join_out} > ${h}_NA.bed
    im=${h}_imprinting.bed
    st=${h}_strain.bed
    rm ${im} ${st}
    grep -v S ${join_out} | awk -v im=${im} -v st=${st} 'BEGIN{OFS="\t"} substr($4,1,1)==substr($5,1,1) {print $0 >> im} substr($4,1,1)!=substr($5,1,1) {print $0 >> st}' 
    sed  -i '1i #chrm\tchrmStart\tchrmEnd\tMB6_winP_count_all_samples\tPB6_winP_count_all_samples' ${join_out}
  done
done

p=0.05
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  wc -l ${head}_${body}_${s}_p${p}_effect_* |paste - - - - 
  done
  done
done

# how many imprinted genes/ncRNA combining all organs?

effect=imprinting
effect=strain
for body in ProteinCodingGene ncRNA
do echo $body 
rm T8_${body}_p0.05_effect_${effect}.bed
for f in  *_${body}_*_p0.05_effect_${effect}.bed
do t=`echo $f|cut -d "_" -f 1`
s=`echo $f|rev| cut -d "_" -f 4|rev`
cat $f |awk -v t=${t} -v s=${s} 'BEGIN{OFS="\t"} (s=="plus"){print $1,$2,$3 , t, "111", "+" } (s=="minus"){print $1,$2,$3 , t, "111", "-" }' >> T8_${body}_p0.05_effect_${effect}.bed
done
cat  T8_${body}_p0.05_effect_${effect}.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$6}' |sort |uniq -c |wc -l
done

for effect in strain imprinting 
  do
for body in ProteinCodingGene ncRNA
do echo $body 
bedtools merge -i <(sort-bed T8_${body}_p0.05_effect_${effect}.bed)  -c 4 -o distinct -d 0  > T8_${body}_p0.05_effect_${effect}_merged.bed
bedtools merge -s -i <(sort-bed T8_${body}_p0.05_effect_${effect}.bed)  -c 4,5,6 -o distinct -d 0  > T8_${body}_p0.05_effect_${effect}_s_merged.bed
done
done
## most are brain only



# do they express in the organ that shows no impriting?
# depends
# use getCounts_bed.R to examine "T8_ProteinCodingGene_p0.05_effect_imprinting_s_merged.bed"
# results in proseq_HT_F1_samples_CombinedBlockFrom8T_KD , AllelicBias and expression


# Are the imprinted genes/ncRNA within the imprinted clusters?
#KD_R1_ncRNA_plus_p0.05_effect_imprinting.bed
effect=imprinting
for body in R1_ncRNA R1_ProteinCodingGene
  do
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  intersectBed -wb -a AllelicBiaseConsistent/${head}_${body}_${s}_p0.05_effect_${effect}.bed -b <(cat T8_2Strand_p0.05_effect_${effect}.bed_cluster |cut -f 3-) > ${head}_${body}_${s}_p0.05_effect_${effect}Incluster.bed
  done
  done
done

for body in R1_ncRNA R1_ProteinCodingGene
  do
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  wc -l ${head}_${body}_${s}_p0.05_effect*Incluster.bed |paste - - - - 
  done
  done
done

for body in R1_ncRNA R1_ProteinCodingGene
  do
rm T8_${body}_p0.05_effect_${effect}Incluster.bed
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  cat ${head}_${body}_${s}_p0.05_effect_${effect}Incluster.bed |awk -v t=${head} -v s=${s} 'BEGIN{OFS="\t"} (s=="plus"){print $1,$2,$3 , t, "111", "+" } (s=="minus"){print $1,$2,$3 , t, "111", "-" }' >> T8_${body}_p0.05_effect_${effect}Incluster.bed
  done
  done
done



# imprinted genes located within imprnting in the cluster (use Consistency methods) that are NOT imprnted in that organ
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  echo ${head}_${body}_${s}_p0.05_effect_${effect}Incluster.bed  
  grep -v ${head} ${head}_${body}_${s}_p0.05_effect_${effect}Incluster.bed
done
done
### every imprinted located in the cluster that are imprinted in that specific organ!




### identify imprinting and strain effect WITHOUT the strict filter of consistency
mkdir AllelicBiase_useAll_ignore_Consistency]
cd AllelicBiase_useAll_ignore_Consistency]
ln -s ../*all_R1_*_interestingHets.bed . #*/



join_AB(){
  file1=$1
  file2=$2
  file3=$3
  cat ${file1} ${file2} |grep -v "#" | awk 'BEGIN{t="_"} {print $1t$2t$3}' |sort -k1,1|uniq > ${file1}.tmp1
  join -a 1 -t $'\t' -e S -j 1 -o 1.1,2.5 ${file1}.tmp1  <(<${file1} awk 'BEGIN{OFS="\t"; t="_"}  {print $1t$2t$3,$0}' | sort -k1,1) > ${file1}.tmp2
  join -a 1 -t $'\t' -e S -j 1 -o 1.1,1.2,2.5 ${file1}.tmp2 <(<${file2} awk 'BEGIN{OFS="\t"; t="_"} {print $1t$2t$3,$0}' | sort -k1,1) | awk 'BEGIN{OFS="\t"} {split($1,a,"_"); print a[1],a[2],a[3], $2, $3}' > ${file3}
  rm ${file1}.tmp*
}


# make a table with Allelic Bias (AB) at MB6 and PB6 and use that to identify strain-effect, imprting, and others (one S, one M|P)



for body in all_R1_ncRNA all_R1_ProteinCodingGene
  do
#KD_PB6_all_R1_ncRNA_plus_interestingHets.bed
for f in *_${body}_plus_interestingHets.bed
  do t=`echo $f|cut -d _ -f 1`
  for s in plus minus
    do 
    join_in1=${t}_MB6_${body}_${s}_interestingHets.bed
    join_in2=${t}_PB6_${body}_${s}_interestingHets.bed
    join_out=${t}_${body}_${s}_interestingHets.bed
    h=${t}_${body}_${s}_fdr0.1_effect

    join_AB ${join_in1} ${join_in2} ${join_out}
    grep S ${join_out} > ${h}_NA.bed
    im=${h}_imprinting.bed
    st=${h}_strain.bed
    rm ${im} ${st}
    grep -v S ${join_out} | awk -v im=${im} -v st=${st} 'BEGIN{OFS="\t"} substr($4,1,1)==substr($5,1,1) {print $0 >> im} substr($4,1,1)!=substr($5,1,1) {print $0 >> st}' 
    sed  -i '1i #chrm\tchrmStart\tchrmEnd\tMB6_winP_count_all_samples\tPB6_winP_count_all_samples' ${join_out}
  done
done
done

for body in all_R1_ncRNA all_R1_ProteinCodingGene
  do
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  wc -l ${head}_${body}_${s}_fdr0.1_effect* |paste - - - - 
  done
  done
done

#CombineT8 (overlap blocks NOT combined)
for effect in imprinting strain
do
echo ${effect}
for body in ProteinCodingGene ncRNA
do echo $body 
rm T8_${body}_fdr0.1_effect_${effect}.bed
for f in  *_${body}_*_fdr0.1_effect_${effect}.bed #BN_all_R1_ncRNA_plus_fdr0.1_effect_imprinting.bed
do t=`echo $f|cut -d "_" -f 1`
s=`echo $f|rev| cut -d "_" -f 4|rev`
cat $f |awk -v t=${t} -v s=${s} 'BEGIN{OFS="\t"} (s=="plus"){print $1,$2,$3 , t, "111", "+" } (s=="minus"){print $1,$2,$3 , t, "111", "-" }' >> T8_${body}_fdr0.1_effect_${effect}.bed
done
cat  T8_${body}_fdr0.1_effect_${effect}.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$6}' |sort |uniq -c |wc -l
done
done

for effect in strain imprinting 
  do
for body in ProteinCodingGene ncRNA
do echo $body 
bedtools merge -i <(sort-bed T8_${body}_fdr0.1_effect_${effect}.bed)  -c 4 -o distinct -d 0  > T8_${body}_fdr0.1_effect_${effect}_merged.bed
bedtools merge -s -i <(sort-bed T8_${body}_fdr0.1_effect_${effect}.bed)  -c 4,5,6 -o distinct -d 0  > T8_${body}_fdr0.1_effect_${effect}_s_merged.bed
done
done

# Are the imprinted genes/ncRNA within the imprinted clusters?
#SK_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprinting.bed
effect=imprinting
for body in all_R1_ncRNA all_R1_ProteinCodingGene
  do

for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  intersectBed -wb -a AllelicBiase_useAll_ignore_Consistency/${head}_${body}_${s}_fdr0.1_effect_${effect}.bed -b <(cat T8_2Strand_p0.05_effect_${effect}.bed_cluster |cut -f 3-) > ${head}_${body}_${s}_fdr0.1_effect_${effect}Incluster.bed
  done
  done
done

# imprinted genes (using pooled reads) show imprnting in the cluster (use Consistency methods) that are NOT imprnted in that organ
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  echo ${head}_${body}_${s}_fdr0.1_effect_${effect}Incluster.bed  
  grep -v ${head} ${head}_${body}_${s}_fdr0.1_effect_${effect}Incluster.bed
done
done

BN_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
BN_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
SP_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
SP_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
chr7    6703891 6730431 P,0,11  P,0,11  chr7    6377748 10415214        BN,GI,KD,LV,SK,ST
HT_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
HT_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
chr6    4674349 4747207 P,0,10  P,6,71  chr6    4418900 4904403 BN,GI,KD,LV,SK,SP,ST
SK_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
chr2    152669460       152708670       P,36,62 P,88,163        chr2    152360590       152769032       BN,KD,LV,ST
chr6    30723546        30748465        P,0,15  P,0,27  chr6    30630739        30897066        BN
SK_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
KD_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
KD_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
ST_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
chr6    30723546        30748465        P,1,11  P,1,16  chr6    30630739        30897066        BN
ST_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
chr15   96994819        97055956        P,7,26  P,7,23  chr15   96824621        97224320        SK
GI_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
chr2    152669460       152708670       P,82,122        P,146,196       chr2    152360590       152769032       BN,KD,LV,ST
chr6    30723546        30748465        P,1,32  P,1,25  chr6    30630739        30897066        BN
GI_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed
LV_all_R1_ProteinCodingGene_plus_fdr0.1_effect_imprintingIncluster.bed
chr10   13060503        13131694        P,5,21  P,10,25 chr10   12976223        13192491        BN,GI,KD,ST
LV_all_R1_ProteinCodingGene_minus_fdr0.1_effect_imprintingIncluster.bed


for body in all_R1_ncRNA all_R1_ProteinCodingGene
  do
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  wc -l ${head}_${body}_${s}_fdr0.1_effect*Incluster.bed |paste - - - - 
  done
  done
done

p=fdr0.1
for body in all_R1_ncRNA all_R1_ProteinCodingGene
  do
rm T8_${body}_${p}_effect_${effect}Incluster.bed
for head in BN SP HT SK KD ST GI LV
  do for s in plus minus
  do
  cat ${head}_${body}_${s}_${p}_effect_${effect}Incluster.bed |awk -v t=${head} -v s=${s} 'BEGIN{OFS="\t"} (s=="plus"){print $1,$2,$3 , t, "111", "+" } (s=="minus"){print $1,$2,$3 , t, "111", "-" }' >> T8_${body}_${p}_effect_${effect}Incluster.bed
  done
  done
done

for effect in strain imprinting 
  do
for body in all_R1_ncRNA all_R1_ProteinCodingGene
do echo $body 
bedtools merge -i <(sort-bed T8_${body}_${p}_effect_${effect}Incluster.bed)  -c 4 -o distinct -d 0  > T8_${body}_${p}_effect_${effect}Incluster_merged.bed
bedtools merge -s -i <(sort-bed T8_${body}_${p}_effect_${effect}Incluster.bed)  -c 4,5,6 -o distinct -d 0  > T8_${body}_${p}_effect_${effect}Incluster_s_merged.bed
done
done

how many imprinted genes/ncRNA in EACH imprinted cluster?
# those with genes
body=all_R1_ProteinCodingGene
bedtools intersect -wo -a <(cat T8_2Strand_p0.05_effect_${effect}.bed_cluster |cut -f 3-) -b <(cat T8_${body}_${p}_effect_${effect}Incluster_merged.bed) > T8_2Strand_p0.05_effect_${effect}.bed_cluster_INTERSECT_T8_${body}_${p}_effect_${effect}Incluster_merged.bed

chr1    63133206        63754615        BN      chr1    63273264        63314576        BN      41312
chr1    63133206        63754615        BN      chr1    63445890        63596276        BN      150386
chr10   12976223        13192491        BN,GI,KD,ST     chr10   13060503        13131694        BN,GI,KD,LV,ST  71191
chr11   11832817        12322538        BN,GI,HT,KD,LV,SK,SP,ST chr11   11930507        12038683        BN,GI,HT,KD,LV,SK,SP,ST 108176
chr11   11832817        12322538        BN,GI,HT,KD,LV,SK,SP,ST chr11   12236607        12322538        GI      85931
chr11   22858106        23001124        BN,GI,KD,LV,SK,SP,ST    chr11   22858106        22982382        BN,GI,KD,LV,SK,SP,ST    124276
chr12   108836167       110507453       BN,GI,HT,LV,SK,ST       chr12   108893630       109028452       BN      134822
chr15   70473174        73030238        BN,GI,HT,KD,LV,SK,SP,ST chr15   72501088        72546340        BN      45252
chr15   70473174        73030238        BN,GI,HT,KD,LV,SK,SP,ST chr15   72589619        73030238        GI,HT,KD,SK,SP,ST       440619
chr15   73121449        73135274        BN      chr15   73121449        73135274        BN      13825
chr15   73157061        73170560        BN      chr15   73157061        73170560        BN      13499
chr15   96824621        97224320        SK      chr15   96994819        97055956        SK,ST   61137
chr17   12331162        12962763        BN,GI,HT,KD,LV,SK,SP,ST chr17   12682405        12769664        GI,HT,KD,LV,SK,SP,ST    87259
chr18   12721540        13977109        BN,KD,LV,SK,SP  chr18   12955851        12992950        BN,KD,LV,SK,SP  37099
chr2    152360590       152769032       BN,KD,LV,ST     chr2    152669460       152708670       GI,SK   39210
chr6    4418900 4904403 BN,GI,KD,LV,SK,SP,ST    chr6    4747305 4760517 BN      13212
chr6    4418900 4904403 BN,GI,KD,LV,SK,SP,ST    chr6    4674349 4747207 BN,GI,HT,KD,LV,SK,SP,ST 72858
chr6    30630739        30897066        BN      chr6    30723546        30748465        BN,GI,SK,ST     24919
chr7    6377748 10415214        BN,GI,KD,LV,SK,ST       chr7    6703891 6730431 BN,GI,KD,LV,SK,SP,ST    26540
chr7    6377748 10415214        BN,GI,KD,LV,SK,ST       chr7    6671268 6696450 BN,KD   25182
chr7    6377748 10415214        BN,GI,KD,LV,SK,ST       chr7    6730577 6967219 BN      236642
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    59228749        59311536        BN      82787
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    59974148        60140219        BN,GI,KD,LV     166071
chr9    89705251        90054507        BN      chr9    89909907        90026977        BN      117070

#ncRNA
body=all_R1_ncRNA
bedtools intersect -wo -a <(cat T8_2Strand_p0.05_effect_${effect}.bed_cluster |cut -f 3-) -b <(cat T8_${body}_${p}_effect_${effect}Incluster_merged.bed)> T8_2Strand_p0.05_effect_${effect}.bed_cluster_INTERSECT_T8_${body}_${p}_effect_${effect}Incluster_merged.bed

chr11   11832817        12322538        BN,GI,HT,KD,LV,SK,SP,ST chr11   12316100        12322538        KD      6438
chr12   108836167       110507453       BN,GI,HT,LV,SK,ST       chr12   109445750       109465750       BN      20000
chr12   108836167       110507453       BN,GI,HT,LV,SK,ST       chr12   109490100       110120700       BN,GI,HT,LV,SK,ST       630600
chr15   70473174        73030238        BN,GI,HT,KD,LV,SK,SP,ST chr15   72809100        72843550        BN,GI,KD,LV,SP  34450
chr17   12331162        12962763        BN,GI,HT,KD,LV,SK,SP,ST chr17   12331162        12886150        BN,GI,HT,KD,LV,SK,SP,ST 554988
chr18   12721540        13977109        BN,KD,LV,SK,SP  chr18   12972100        12974050        BN      1950
chr2    152360590       152769032       BN,KD,LV,ST     chr2    152703600       152724100       BN,ST   20500
chr2    174047329       174343686       BN,SP   chr2    174261000       174329500       BN,SK,SP        68500
chr6    30630739        30897066        BN      chr6    30802800        30840050        BN      37250
chr7    6377748 10415214        BN,GI,KD,LV,SK,ST       chr7    6696550 6729900 GI,HT,LV,SK,ST  33350
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60003100        60005800        BN      2700
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60125450        60125800        GI      350
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61726200        61726500        BN      300
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61877750        61878200        BN      450
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    62374250        62377450        BN      3200
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60180500        60244500        BN      64000
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60961800        61065400        BN      103600
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61667050        61726150        BN      59100
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61790900        61837200        BN      46300
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    59169950        59294500        BN      124550
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60244850        60391600        BN      146750
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60391700        60492800        BN      101100
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60492950        60734000        BN      241050
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60940300        60961600        BN      21300
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61065550        61312000        BN      246450
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61396250        61613050        BN      216800
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61726650        61790850        BN      64200
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    62046700        62209700        BN      163000
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    60734150        60940100        BN      205950
chr7    58925685        63091232        BN,GI,HT,KD,LV,SK,SP    chr7    61837250        61877700        BN      40450
chr7    142574333       142578903       SK      chr7    142574333       142578903       SK      4570
chr7    143041189       143511031       BN,GI,HT,KD,LV,SK,SP,ST chr7    143133300       143296650       BN,GI,HT,KD,LV,SK,SP,ST 163350
chr9    96431959        96530231        SK      chr9    96478150        96480200        SK      2050


#HERE

join_AB_cluster(){
  file1=$1
  file2=$2
  file3=$3
  join -a 1 -t $'\t' -e NA -1 2 -2 1 -o 1.2,1.3,1.4,1.5,1.6,2.9 <(cat ${file1}| sort -k 2)  <(<${file2} awk 'BEGIN{OFS="\t"; m=":"; t="-"}  {print $1m$2t$3,$0}'| sort -k1,1) > ${file1}.tmp2
  join -a 1 -t $'\t' -e NA -j 1 -o 1.1,1.2,1.3,1.4,1.5,1.6,2.9 ${file1}.tmp2 <(<${file3} awk 'BEGIN{OFS="\t"; m=":"; t="-"}  {print $1m$2t$3,$0}'| sort -k1,1) 
  rm ${file1}.tmp*
}

join_AB_cluster T8_2Strand_p0.05_effect_${effect}.bed_cluster \
T8_2Strand_p0.05_effect_${effect}.bed_cluster_INTERSECT_T8_all_R1_ProteinCodingGene_${p}_effect_${effect}Incluster_merged.bed \
T8_2Strand_p0.05_effect_${effect}.bed_cluster_INTERSECT_T8_all_R1_ncRNA_${p}_effect_${effect}Incluster_merged.bed \
> T8_2Strand_p0.05_effect_${effect}.bed_cluster_ProteinCodingGene_ncRNA




##### NOT used below #####
# genetics, both B6 or both Cast
# imprinting, both M or both P


cd /workdir/sc2457/F1_Tissues/ImprintingOrGenetics/strict
ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/*strict* .



for f in *_agreeCount_strict_agreenAmong_*_samples.bed
do echo $f #BN_MB6_all_R1_HMM_minus_agreeCount_strict_agreenAmong_3_samples.bed
head=`echo $f |cut -d _ -f 1-8`
mv $f ${head}.bed
done

# intersect the blocks from two cross MB6 and PB6
for f in *MB6_all_R1_HMM_*_agreeCount_strict.bed
do head=`echo $f |cut -d _ -f 1`
tail=`echo $f |cut -d _ -f 3-`
s=`echo $f |cut -d _ -f 6`

bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_0.1.bed
bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_1bp.bed

# bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
# |awk 'BEGIN{OFS="\t"} ($NF >10 ){print $0}' > ${head}_MB6_PB6_${s}_intersect_10.bed
done


for f in *_intersect_*.bed
do 
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)==substr($8,1,1) {print $0}' > ${f}_strain.bed # M.P in PB6 is reversed
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)!=substr($8,1,1) {print $0}' > ${f}_imprint.bed
done


diff LV_MB6_PB6_minus_intersect_0.1.bed_imprint.bed LV_MB6_PB6_minus_intersect_1bp.bed_imprint.bed | awk '{print $2":"$3"-"$4,$6":"$7"-"$8, $0}'^C
[sc2457@cbsudanko ImprintingOrGenetics]$ head LV_MB6_PB6_minus_intersect_0.1.bed_imprint.bed | awk '{print $1":"$2"-"$3,$5":"$6"-"$7, $0}'


ln -s /workdir/sc2457/F1_Tissues/3rd_batch/map2ref/*allbut1* .
for f in *_agreeCount_allbut1_agreenAmong_*_samples.bed
do echo $f #BN_MB6_all_R1_HMM_minus_agreeCount_strict_agreenAmong_3_samples.bed
head=`echo $f |cut -d _ -f 1-8`
mv $f ${head}.bed
done

# intersect the blocks from two cross MB6 and PB6
for f in *MB6_all_R1_HMM_*_agreeCount_allbut1.bed
do head=`echo $f |cut -d _ -f 1`
tail=`echo $f |cut -d _ -f 3-`
s=`echo $f |cut -d _ -f 6`

bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_0.1.bed
bedtools intersect -wo -sorted -a <( cat $f| awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4'}) -b <(cat ${head}_PB6_${tail} | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4}') \
> ${head}_MB6_PB6_${s}_intersect_1bp.bed


##### redo with stric blocks with p value <=0.05
cd /workdir/sc2457/F1_Tissues/ImprintingOrGenetics/strict_p0.05
cp /local/ftp/pub/hub/F1_Tissues/mm10/IGV/* .


for f in *_MB6_HMM_sorted_*.bed
	do head=`echo $f |cut -d _ -f 1`
	s=`echo $f |rev|cut -d _ -f 1| rev |cut -d . -f 1 `
	bedtools intersect -wo -f 0.1 -F 0.1 -sorted -a $f -b ${head}_PB6_HMM_sorted_${s}.bed \
	> ${head}_MB6_PB6_${s}_intersect_0.1.bed
	bedtools intersect -wo -sorted -a $f -b ${head}_PB6_HMM_sorted_${s}.bed \
	> ${head}_MB6_PB6_${s}_intersect_1bp.bed
done

for f in *_intersect_*.bed
do 
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)!=substr($10,1,1) {print $0}' > ${f}_strain.bed # M.P in PB6 is correct
cat $f | awk 'BEGIN {OFS="\t"} substr($4,1,1)==substr($10,1,1) {print $0}' > ${f}_imprint.bed
done

wc -l *0.1* | paste - - -  


rm imprint.txt
for f in *_intersect_0.1.bed_imprint.bed
do echo $f >> imprint.txt
cat $f | awk 'BEGIN {OFS="\t"; l1=":"; l2="-"} {print $1l1$2l2$3, $0}'  >> imprint.txt
done




